#!/bin/bash
#
# Terminus Database Sync
#
# Requirements: Terminus, WP-CLI, Drush
# - https://pantheon.io/docs/terminus
# - https://wp-cli.org/
# - https://www.drush.org/
#
# This shell script will make a database backup for the specified Pantheon
# hosted site, download the gzip file, extract it and then import it using
# either WP-CLI or Drush
#
# WordPress:
# - Drops existing database
# - Creates new database
# - Imports SQL file
# - Delete transients
#
# Drupal:
# - Drop tables in existing database
# - Import SQL file
# - Rebuild Cache
#

if [ "$1" == "-h" ]; then
  echo "Sync a local database with the Pantheon environment of your choosing."
  echo "Run this command from within your project path as you would WP-CLI or Drush."
  echo ""
  echo "The following additional resources are required:"
  echo ""
  echo "- Terminus: https://pantheon.io/docs/terminus/"
  echo "- Drush: https://www.drush.org/latest/"
  echo "- WP-CLI: https://wp-cli.org/"
  echo ""
  echo "Usage:"
  echo "    $ `basename $0` [wp|drupal] [SITENAME.ENV]"
  echo ""
  echo "To review Pantheon sites you have access to:"
  echo "    $ terminus site:list"
  exit 0
fi

# Confirm we know drupal/wp
if [[ -z "$1" ]]; then
  printf "Please confirm which type of db we're updating: drupal/wp\n"
  exit 0
fi

# Confirm we have a site
if [[ -z "$2" ]]; then
  printf "Please provide site to retrieve db from: SITENAME.ENV\n"
  exit 0
fi

APP=$1
SITE=$2

#
# Validate App
#
if [[ "$APP" != "drupal" && "$APP" != "wp" ]]; then
    printf "App must be drupal or wp\n"
    exit 1
fi

#
# Create
#
printf "Terminus will say 'Export code, files and database...' but it is just a database\n"
terminus backup:create $SITE --element=db

#
# Download
#
terminus backup:get $SITE --element=db --to=/tmp/$SITE-backup.sql.gz

#
# Extract
#
gzip -d /tmp/$SITE-backup.sql.gz

#
# Maybe Import
#
FILE="/tmp/$SITE-backup.sql"

if [[ -f "$FILE" ]]; then
  if [[ "$APP" == "drupal" ]]; then
    drush sql-drop -y && drush sql:cli < $FILE
    drush cache:rebuild
  elif [[ "$APP" == "wp" ]]; then
    wp db drop --yes
    wp db create
    wp db import $FILE
    wp transient delete --all
  fi
else
  echo ""
  echo "Import file missing, there is probably helpful feedback above."
fi

echo ""
